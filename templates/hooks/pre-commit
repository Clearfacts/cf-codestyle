#!/usr/bin/env sh

# Git pre-commit hook that runs multiple hooks specified in $HOOKS.
# Make sure this script is executable. Bypass hooks with git commit --no-verify.

. "$(dirname -- "$0")/canonicalize_filename.sh"

# exit on error
set -e

# Absolute path to this script, e.g. /home/user/bin/foo.sh
thisScript="$(canonicalize_filename "$0")"

# Absolute path this script is in, thus /home/user/bin
scriptPath="$(dirname -- "$thisScript")"

###########################################################
# SETTINGS:
# pre-commit hooks to be executed. They should be in the same .git/hooks/ folder
# as this script. Hooks should return 0 if successful and nonzero to cancel the
# commit. They are executed in the order in which they are listed.
#hooks="pre-commit-phpcs pre-commit-phpstan ..."
###########################################################

hooks="pre-commit-phpcs %custom_hooks%"

for hook in $hooks
do
    echo "Running hook: $hook"
    # run hook if it exists
    # if it returns with nonzero exit with 1 and thus abort the commit
    if [ -f "$scriptPath/$hook" ]; then
        "$scriptPath/$hook"
        if [ $? != 0 ]; then
            exit 1
        fi
    else
        echo "Error: file $hook not found." >&2
        echo "Aborting commit. Make sure the hook is in $scriptPath and executable." >&2
        echo "You can disable it by removing it from the list in $thisScript." >&2
        echo "You can skip all pre-commit hooks with --no-verify (not recommended)." >&2
        exit 1
    fi
done
